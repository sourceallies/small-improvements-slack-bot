name: Badge Generation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  badgeTest:
    #runs-on: "ubuntu-latest"
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v3
    - name: Install Node 16
      uses: actions/setup-node@v3
      with:
        node-version-file: ".nvmrc"

    # basically npm install but only installs from package-lock
    - run: npm ci
    - run: npm run lint

    # Only run the coverage once
    - if: ${{ matrix.node-version == '16.x' }}
      name: Get Coverage for badge
      run: | # '----------------------------------'
        #   '=============================== Coverage summary ===============================',
        #   'Statements   : 32.5% ( 39/120 )',
        #   'Branches     : 38.89% ( 21/54 )',
        #   'Functions    : 21.74% ( 5/23 )',
        #   'Lines        : 31.93% ( 38/119 )',
        #   '================================================================================',
        # SUMMARY = SUMMARY.split('\n')[5]; // 'Lines        : 31.93% ( 38/119 )'
        # SUMMARY = SUMMARY.split(':')[1].split('(')[0].trim(); // '31.93%'
        SUMMARY="$(npm run coverage -- --coverageReporters='text-summary' | tail -2 | head -1)"
        echo $SUMMARY
        TOKENS=($SUMMARY)
        echo $TOKENS
        # process.env.COVERAGE = '31.93%';
        echo "COVERAGE=$(echo ${TOKENS[2]})" >> $GITHUB_ENV
        COVERAGE=$(echo ${TOKENS[2]})
        # var REF = 'refs/pull/27/merge.json';
        REF=${{ github.ref }}
        # console.log('github.ref: ' + REF);
        echo "github.ref: $REF"
        echo "coverage: $COVERAGE"
        # var PATHS = REF.split('/');
        IFS='/' read -ra PATHS <<< "$REF"
        # var BRANCH_NAME = PATHS[1] + '_' + PATHS[2];
        BRANCH_NAME="${PATHS[1]}_${PATHS[2]}"
        # console.log(BRANCH_NAME); // 'pull_27'
        echo $BRANCH_NAME
        # process.env.BRANCH = 'pull_27';
        echo "BRANCH=$(echo ${BRANCH_NAME})" >> $GITHUB_ENV
        echo "CCOV=$(echo $COVERAGE | tr --delete %)" >> $GITHUB_ENV
        echo "CCOV: $(echo $COVERAGE | tr --delete %)"
    - if: ${{ matrix.node-version == '16.x' }}
      name: Create the Badge
      uses: schneegans/dynamic-badges-action@v1.4.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: a75d8e3e0b2e93d28de4074882dade90
        filename: small-improvements-slack-bot__${{ env.BRANCH }}.json
        label: Test Coverage
        message: ${{ env.COVERAGE }}
        namedLogo: jest
        maxColorRange: 100.00
        minColorRange: 0.00
        valColorRange: ${{ env.CCOV }}
